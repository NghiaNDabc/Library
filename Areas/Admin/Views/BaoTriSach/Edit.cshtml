@model QuanLySachThuVien.Models.Sach

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
<meta charset="UTF-8">
<style>
    .form-group {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }
    .form-group label {
        width: 150px;
        margin-right: 10px; /* optional for spacing between label and input */
    }
    .form-group .form-control,
    .form-group .form-control-file {
        flex: 1;
    }
    .container {
       /* background-color:red;*/
        width:1300px;
        margin-left: 10px;
    }
    .margin {
        margin-right: 20px;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield; /* Firefox */
    }
    #successPopup{
        position:fixed;
        top:0;
    }
@*//new { enctype = "multipart/form-data"*@
</style>
<div>
    <a href="@Url.Action("Index")" class="btn btn-success">
        <i class="fas fa-arrow-left mr-2"></i> Trở về
    </a>
</div>
<div class="container">
    @using (Html.BeginForm("Edit", "BaoTriSach", FormMethod.Post, new { enctype = "multipart/form-data", acceptcharset = "UTF-8" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                    @Html.LabelFor(model => model.maSach, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.maSach, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.maSach, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <input name="hinhAnh" value="@Model.hinhAnh" type="hidden" />
            <input name="maSach" value="@Model.maSach" type="hidden" />
            @Html.ValidationMessageFor(model => model.maSach, "", new { @class = "text-danger" })
            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.maDanhMuc, "Danh mục", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("maDanhMuc", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.maDanhMuc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.tenSach, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tenSach, new { htmlAttributes = new { @class = "form-control", @id = "tenSach" } })
                    @Html.ValidationMessageFor(model => model.tenSach, "", new { @class = "text-danger", @id = "tenSachError" })
                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.hinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img id="output" src="~/Content/Images/@Model.hinhAnh" alt="Ảnh" width="180"  />
                    @Html.ValidationMessageFor(model => model.tenSach, "", new { @class = "text-danger", @id = "hinhAnhError" })
                    <input name="imgfile" id="ufile" value="@Model.hinhAnh" type="file" onchange="loadF(event)" />

                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.soTrang, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.soTrang, new { htmlAttributes = new { @class = "form-control", @id = "soTrang" } })
                    @Html.ValidationMessageFor(model => model.soTrang, "", new { @class = "text-danger", @id = "soTrangError" })
                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.moTa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.moTa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.moTa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.soLuong, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.soLuong, new { htmlAttributes = new { @class = "form-control", @id = "soLuong" } })
                    @Html.ValidationMessageFor(model => model.soLuong, "", new { @class = "text-danger", @id = "soLuongError" })
                </div>
            </div>

            <div class="form-group d-flex row ">
                @Html.LabelFor(model => model.namXuatBan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.namXuatBan, new { htmlAttributes = new { @class = "form-control", @id = "namXuatBan" } })
                    @Html.ValidationMessageFor(model => model.namXuatBan, "", new { @class = "text-danger", @id = "namXuatBanError" })
                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.nhaXuatBan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nhaXuatBan, new { htmlAttributes = new { @class = "form-control", @id = "nhaXuatBan" } })
                    @Html.ValidationMessageFor(model => model.nhaXuatBan, "", new { @class = "text-danger", @id = "nhaXuatBanError" })
                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.giaTien, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.giaTien, new { htmlAttributes = new { @class = "form-control", @id = "giaTien" } })
                    @Html.ValidationMessageFor(model => model.giaTien, "", new { @class = "text-danger", @id = "giaTienError" })
                </div>
            </div>

            <div class="form-group d-flex row">
                @Html.LabelFor(model => model.tenTacGia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tenTacGia, new { htmlAttributes = new { @class = "form-control", @id = "tenTacGia" } })
                    @Html.ValidationMessageFor(model => model.tenTacGia, "", new { @class = "text-danger", @id = "tenTacGiaError" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="btnEdit" value="Cập nhật" style="background-color: #00ACE8 !important;" class="btn btn-default btn-primary" />
                </div>
            </div>
        </div>
    }

    
</div>
<script>
    var loadF = function (event) {
        var img = document.getElementById('output');
        img.src = URL.createObjectURL(event.target.files[0]);
    };
</script>
